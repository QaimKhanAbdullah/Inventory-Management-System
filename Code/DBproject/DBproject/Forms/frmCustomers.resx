<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAADdAAAA3QFwU6IHAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAABjNJREFUWEfFl1lwU1UcxqNPDuODy4OOM4o++SAPOowzyGhLCi00SXGh
        qIVCaa2klCqLjmwvHWAorXQBiqRiKQyLU0GQgoBU6CJdaNrsuTe5aZOuafY0DWmakvTvOZfecDfF8UEf
        fpN7/ud85/vOueeemUgA4H9FtIjJT0l5eUN6elHh8uX7lXJ57qYVK14XGydGfkZGGtLuKMrM3FOclZWx
        SS5/VmwcRrS4Tiqt27B06XSRXA5I/AiF4mqxTPaimAazLiPjtXVLlpAoNFcnl0eKFIoSiUTyBF/DaWDW
        S6WN+cuW8SdgYy9evfppvm7jwoXz1qamTiozM8U0D1Eo9vF1nEZ+WtritSkpCVExC7Qzx9g6TK5Uejs/
        PV10PIs4ei1vsXWcSdDqz6OtFxNyQKv0I7NytNWNm2SyH4pkMmVuamoU/YqOZ1OsUJSyPTkB0BaSn2Vk
        cARln68BsnFvyP1b5VjJyizAq/wnITEX95fMepoP+X6p2DaYrMtkTWxPfoAhfID25X8KDbuVoD9XGol0
        HE08UNcBplyZM5X3GPPda7Lh8sEtCdfNbyOxe8dpHSLe8t2u4S/ez8IBWtmenAD7C7LdxvOlrsgfRxhh
        EvLCAUABRU3ZbFYowNFUIdBj7FfKDaf3FBnZnskH59XSeb5bB6OhO1WRaGetQFy7LQ/y0tJETflcqdgu
        0GNm1HXD6HcWNPUvCQI4Wkqf8t8qD/9VgK+ys6CAd8o3K+TQVLEl7m2uDFeXrE/Wj24tEOgxcwFicK/2
        eUEAjO/3srdDLVXqqQ5hgGLFciicO6C7clbBzwe+BNfNQ9Ox7ofvOdp1PFq/Y+Ms7j+ozBXoMXF13U9x
        tUrG9uQEwITbapTh9hqBeMcnWXi1MHGnKjHTo5rl9zPcPbEHjn9dKNoX71F9xPfjNBhCdyrHWCeYxnW9
        DJlXwlTHUU6dT+yeCmI9KrG+boDSJ/lenEaS7poXwm3VRLTrGC3GYdD5gFBrZexxAR6oVRP4l70AtPU3
        oPOH58S8BAWGcM+pfdhsBq0ITzLZdtiLdsY1dfdxAer06FxModcEGFybNlzaLuaBERQIgpjvdHpOBx3a
        OPs+iBLXIUi2jIqdDzaTjl57qKshaY4JjVEJjy9Y63A4nuH7JR90Ot27Wq1Oq9Ho4h7vxKw/eB9CPecg
        2nkMYtqzEPR6IOD1wkRLNceQTay3HgI+LwScgzDZXkuHiFCtgOfy+idnrRYqTFmoGpIkX+UE0OkMZ5Fx
        gjCTgAbB8IiTFtEhjDdiQc/4w0l8IRjT3IJwu/CmnFGfALumFdzeCXpsYHwEJs3N08w8I6Pj9NwYi4WK
        UCSlpAMYDIZvkHmyE0NZbShxCFwDDk8wOxV8R8pCvsAkDA2N0v2Dhk64j14FcwdgbJp2IEkrDA6OgC8Q
        Bp+q2hdc9R64KJsHrR4oqp/jgZilKGqZBJm7mZWzwSGsZuK+b+U78aFT37vo9lzfyIAV0H3B2QGHxQhG
        ozmpHTp30uFbuShBmYgIW8uBpK5Jens1caaAV8AZYKESA2lvAnW2wYfbZhOBttIFfrQ7obbDSfMZzSkI
        +IMw6vSAXm8EEwpiazw3jLV4DtZ8YGF7WCkX3gG6gSfXafWPOjF9fd6BlDeAuHwxgcfpdQYYd/npdxoc
        MqFP8wjM9J2ECdcIXXN7grQOm5BNl6JYS6nVQfac6LyBCXkxbU4ALT/AjV9Hte3ttIhJbrcP0WaYwKAV
        AnYi2XY4hjl66sKPYL3W5GHX8CI5AbQaXQw/iAUwdHbFsDm7hnG5/TA+5oZgTjoEP5aCE70WlzsgGIeh
        bjdH2W1eAI+E0BMLSNK2BJFlMJjz555p+vq0Cc474+HcVjA1vnXDtFhfEjMZYs9pMpF5BGH9AD8PmAde
        SV5EfIxGcjH78xQL0r95fQIhqPPHEoR9vpgHRrSI0Wv1hcz24y0THFBE/4dSGn6dPmhznyTGRtgWiXlg
        RIsYfgDBASXI2EDqAsCg+2KG3YfDMncC5t8F0Otz/jZAdzf9idKfWsdd7qfGD2Czcf6MsBEtMqBJdlmt
        tp0oQBU6oGfwM0P/mYa9yHwnhqpXVbD7jEbTabOZPIyfLRbbWrG5GUSL/x0g+ROiXPJLNtgdMwAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>