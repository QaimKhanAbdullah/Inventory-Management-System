<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox12.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAA3NCSVQICAjb4U/gAAAAAXNSR0IArs4c
        6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAAN0AAADdAXBTogcAAAAZdEVYdFNvZnR3YXJlAHd3dy5p
        bmtzY2FwZS5vcmeb7jwaAAAD70lEQVRYR8WWT2wbRRjFXVFy4EC5cwAuSEgc4NQLoNahKiV/nAM+9I56
        QdRyCY4pKkqQWnqIhAqHFKQK0h7aJqGhRQmyHbIuiddde+3EJOuglhAF0oa0ttNYSluamOm8bWaZXb7a
        wwUOv2Tmm2/fe57ZtdfHGPtfIYsq+EeKz/gv5CdbE0t9HdrqU1SPCmRRBf83Zvz1izOsXSuztvHSYapH
        BbKowq4h45f20TkWTP6BEF9TPSqQxYaYBx6/mOq7vTZzhFVnP2IT+VNF1MjeBjiDwHhpZ5tW6lBhzDzd
        u2l1sfncxzYYo0b1UsDLFWDPsPVSS+K6fZ4qXMl/aZsGB7+zwRg1qpcCXvB0AoDm4fw5fmNNtgznrOCl
        3E2MH8VXP56Zh+llvdcGY9SoXgE0oY0xvISvE0AQ183znPsJ09zhXXO41v3kz7lj92AMfi8cv4Ua2cuB
        FjSh7V1zTQYsqymhm1XeeDWuZ/fLa17wFLyTSLPwhIVtrfsUQAua0IaHvOZqHNNzb8R0sxBLZ8OJVNbZ
        JgoE2DtyTZxr3QDQgia04SGvuRrjeu4kT9oTM4zn+P81b1oZ1QDQgNaWZg885HW5eRtvuJHQsy9jTqWV
        UQ0gdhVjaMODj7eJdacxljZ38sVFMX+Y1uwTcy+qAaABLWm+CC8xdxp5yk/iafOEmFNpZRQDuHYVwANe
        Yu4088a5WCrnF/OtmiutjEoA767aNe4BLzG3/4wZxvO8WNY0bbtYALGU+RmvH5NrApUAuBYacg0e8IIn
        5r7bRji2nD1q/jbVV9iwot0ylcLx/l/zp5YxZjORF2ShegHWzc6WVSOcXMifXIGGVxdey9Mnvq9ZkQ98
        ZT20vnolbH+j1ePP4uEXZZN6Aarmex03Jw6yO1OdpJagZnWZ2IHsrckQ25ilm7ZYYSz4mGxS9wisYFMp
        FaqtZQ5RWg4bVqTXd2f6w6fLqdBGNVuvOfKWy4DT6B6oZsK92IV7hfcJPZtF/H48bOZbxhPfJUKs8216
        1ysOVG7CqhEeLKUO/uUNUStGC+JIneYb5oEn1oxDn1ezYY1fMFIrdoXYXPRZse5FJQDgH+4Vrjm4nu+c
        vD8b+WJzNrpffnv6xwWqqAZoBFlUYddQ5u8AyUo/1aMCWWxEcMBqevXs5c3WMfuNGCwFB5jrKVGFLDai
        +UK+3z88JcxtAlr5baq3EWRRBp+2+dufevaNLnza+sNK997Rqwtvxpdc5hLT7cnykYBWiQaSlTaVXSGL
        MruHMuk9l4qUWUP4K7jzq/coyKLMa+cm7rbE1V/ZZfixzFCaMmRRZvdgZr41cT3drpWS/5bAeOU0pSlD
        Fv87mO8BW76pM4XrN+QAAAAASUVORK5CYII=
</value>
  </data>
</root>